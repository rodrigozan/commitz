const inquirer = require('inquirer');
const { execSync } = require('child_process');

const tiposCommit = [
  { name: 'feat (‚ú® - Nova funcionalidade)', value: { emoji: '‚ú®', chave: 'feat' } },
  { name: 'fix (üêõ - Corre√ß√£o de bug)', value: { emoji: 'üêõ', chave: 'fix' } },
  { name: 'refactor (‚ôªÔ∏è - Refatora√ß√£o)', value: { emoji: '‚ôªÔ∏è', chave: 'refactor' } },
  { name: 'docs (üìö - Documenta√ß√£o)', value: { emoji: 'üìö', chave: 'docs' } },
  { name: 'test (üß™ - Testes)', value: { emoji: 'üß™', chave: 'test' } },
  { name: 'ci (‚öôÔ∏è - Integra√ß√£o/Configura√ß√£o)', value: { emoji: '‚öôÔ∏è', chave: 'ci' } },
  { name: 'perf (‚ö° - Performance)', value: { emoji: '‚ö°', chave: 'perf' } },
  { name: 'chore (üßπ - Tarefas)', value: { emoji: 'üßπ', chave: 'chore' } },
  { name: 'style (üé® - Estilo)', value: { emoji: 'üé®', chave: 'style' } },
  { name: 'raw (üíæ - Dados)', value: { emoji: 'üíæ', chave: 'raw' } },
  // Adicione outros tipos conforme a necessidade
];

async function run() {
  const answers = await inquirer.prompt([
    {
      type: 'list',
      name: 'tipo',
      message: 'Qual o tipo do commit?',
      choices: tiposCommit,
    },
    {
      type: 'input',
      name: 'mensagem',
      message: 'Mensagem do commit:',
      validate: input => input.length > 0 || 'Mensagem obrigat√≥ria.',
    },
  ]);

  const commitMsg = `${answers.tipo.emoji} ${answers.tipo.chave}: ${answers.mensagem}`;
  console.log('\nCommit Gerado:', commitMsg);

  try {
    execSync('git add .', { stdio: 'inherit' }); // Adiciona todas as altera√ß√µes
    execSync(`git commit -m "${commitMsg}"`, { stdio: 'inherit' }); // Faz o commit
    console.log('\nCommit realizado com sucesso!');
  } catch (e) {
    console.error('\nFalha ao realizar commit. Verifique se est√° em um reposit√≥rio git e h√° altera√ß√µes.');
  }
}

run();
